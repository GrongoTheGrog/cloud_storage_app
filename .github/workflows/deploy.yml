name: Deploy via Bastion

on:
  pull_request:
    types: ["closed"]
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH keys
      run: |
        mkdir -p ~/.ssh
    
        echo "${{ secrets.BASTION_KEY }}" > ~/.ssh/bastion_key
        chmod 600 ~/.ssh/bastion_key
    
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/target_key
        chmod 600 ~/.ssh/target_key
    
        cat <<EOF > ~/.ssh/config
        Host bastion
          HostName ${{ secrets.BASTION_HOST }}
          User ${{ secrets.BASTION_USER }}
          IdentityFile ~/.ssh/bastion_key
          StrictHostKeyChecking=no
    
        Host target
          HostName ${{ secrets.EC2_HOST }}
          User ${{ secrets.EC2_USER }}
          ProxyJump bastion
          IdentityFile ~/.ssh/target_key
          StrictHostKeyChecking=no
        EOF

        chmod 600 ~/.ssh/config

    - name: Add SSH known hosts
      run: |
        ssh-keyscan -H ${{ secrets.BASTION_HOST }} >> ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Build the app
      run: |
        mvn clean package -DskipTests
        
    - name: Rsync files via Bastion
      run: |
        rsync -avz ./target/ target:/home/${{ secrets.EC2_USER }}/app/

    - name: Start app
      run: |
        ssh target << 'EOF'
          cd /home/${{ secrets.EC2_USER }}/app
          fuser -k 8080/tcp || true
          java -jar target/cloud-storage-app-0.0.1-SNAPSHOT.jar
        EOF
